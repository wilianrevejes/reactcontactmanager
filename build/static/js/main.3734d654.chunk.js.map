{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","apply","arguments","react_default","createElement","children","Component","Consumer","Contact","onDeleteClick","_ref","delete","_x","_x2","showContactInfo","onShowClick","bind","assertThisInitialized","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","Link","to","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","onSubmit","e","_this$state","newContact","preventDefault","errors","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","Header","branding","href","About","NotFound","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3734d654.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'DELETE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case 'ADD_CONTACT':\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case 'UPDATE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contacts: [],\n      dispatch: action => this.setState(state => reducer(state, action))\n    };\n  }\n  async componentDidMount() {\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n\n    this.setState({ contacts: res.data });\n  }\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\n\nclass Contact extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showContactInfo: false\n    };\n    this.onShowClick = this.onShowClick.bind(this);\n    this.onDeleteClick = this.onDeleteClick.bind(this);\n  }\n  onShowClick() {\n    this.setState({ showContactInfo: !this.state.showContactInfo });\n  }\n  onDeleteClick = async (id, dispatch) => {\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n    dispatch({\n      type: 'DELETE_CONTACT',\n      payload: id\n    });\n  };\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3 \">\n              <h4>\n                {name}{' '}\n                <i\n                  onClick={this.onShowClick}\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: 'pointer' }}\n                />\n                <i\n                  className=\"fas fa-times\"\n                  style={{ cursor: 'pointer', float: 'right', color: 'red' }}\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                />\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: 'pointer',\n                      float: 'right',\n                      color: 'black',\n                      marginRight: '1rem'\n                    }}\n                  />\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../context\";\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Contact</span> List\n              </h1>\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: \"text\"\n};\n\nexport default TextInputGroup;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass AddContact extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    };\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    // Check for Erros\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Name is required' } });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n\n    const res = await axios.post(\n      'https://jsonplaceholder.typicode.com/users',\n      newContact\n    );\n\n    dispatch({ type: 'ADD_CONTACT', payload: res.data });\n\n    // Clear State\n\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass EditContact extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    };\n  }\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n\n    const contact = res.data;\n\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    // Check for Erros\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Name is required' } });\n      return;\n    }\n\n    const updContact = {\n      name,\n      email,\n      phone\n    };\n\n    const { id } = this.props.match.params;\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updContact\n    );\n\n    dispatch({\n      type: 'UPDATE_CONTACT',\n      payload: res.data\n    });\n\n    // Clear State\n\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\">Home</i>\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\">Add</i>\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\">About</i>\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: \"My App\"\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\nexport default Header;\n","import React from \"react\";\n\nexport default function About() {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function NotFound() {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        {\" \"}\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, that age does not exist</p>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\n\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}